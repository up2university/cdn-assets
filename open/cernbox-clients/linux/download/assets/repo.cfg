# repo_config_data.py
# text snippets per platform that help users to
# - register linux repositories
# - install linux packages
# - and optionally install a key so that automatic updates come in.
#
# The text blocks are plain text shell commands. Variable substitution is available.
# Variables are written in {Variable} notation, the available variables are:
#  - {DownloadUrl}	# your download url path up to the platform specific folders (HTTP)
#  - {DownloadUrlCred}	# as DownloadUrl including user and password credendtials, if any.
#  - {DownloadUrlHttps}	# as DownloadUrl, but with enforced https:// used for gpg keys
#  - {DownloadUrlHttpsCred}	# as DownloadUrlHttps including user and password credendtials, if any.
#  - {Platform}		# Build target name, as seen in the Build Service.
#  - {BasePlatform}	# Build target grouping. Platform without versions and such.
#  - {Package}		# Name of the Linux package
#  - {Project}		# Name of the build service project. Used e.g. with repo files
#  - {Version}		# 1.7.2~Beta1
#  - {VersionRel}	# 1.7.2~Beta1-2.1
#  - {DelRepoFile}	# owncloud-client (without .repo or .list suffix) auto-converted into a del_repo_sh

[Generic]
download_url: {DownloadUrlCred}/{Platform}/
entry_template:
   <div class="soo_distro soo_distro_{BasePlatform} soo_distro_{Platform}">
    <p><strong>{Platform} {Package}-{VersionRel}</strong></p>
    <p>{key_help}</p>
    <pre>{key_sh}</pre>
    <p>{repo_help}</p>
    <pre>{del_repo_sh}{repo_sh}</pre>
    {install_script_html}
    <p><small>Download <a href="{download_url}">packages manually</a> (without adding a repo)</small></p>
    <p><br></p>
  </div>
repo_help:
  Run the following shell commands to add the repository and install from there.
key_help:
  Run the following shell commands to trust the repository.
key_sh:
del_repo_sh:
repo_sh:
install_script_html:
  <p><small>Download <a href="{DownloadUrlCred}/{Platform}/INSTALL.sh">installer script</a> (experimental)</small></p>

[APT]
# FIXME: for Ubuntu we should use:
#  source /etc/os-release
#  echo "deb {DownloadUrlCred}/Ubuntu_$VERSION_ID/ /" &gt; /etc/apt/sources.list.d/{Project}.list
#  echo "deb  http://archive.ubuntu.com/ubuntu/ $UBUNTU_CODENAME main" &gt;&gt; /etc/apt/sources.list.d/{Project}.list
base: Generic
key_help:
  Add (at least temporarily) a download repository. This requires
  registering trusted key. (<a href="https://help.ubuntu.com/community/SecureApt">More information</a>).
  Run the following shell commands to trust the repository:
key_sh:
  wget -nv {DownloadUrlHttpsCred}/{Platform}/Release.key -O - | sudo apt-key add -
del_repo_sh:
  sudo rm -f /etc/apt/sources.list.d/{DelRepoFile}.list
repo_sh:
  echo 'deb {DownloadUrlCred}/{Platform}/ /' | sudo tee -a /etc/apt/sources.list.d/{Project}.list
  sudo apt update
  sudo apt install {Package}

[YUM]
base: Generic
key_sh:
  sudo rpm --import {DownloadUrlHttpsCred}/{Platform}/repodata/repomd.xml.key
del_repo_sh:
  sudo rm -f /etc/yum.repos.d/{DelRepoFile}.repo
repo_sh:
  sudo wget {DownloadUrlCred}/{Platform}/{Project}.repo -O /etc/yum.repos.d/{Project}.repo
  sudo yum clean all
  sudo yum install {Package}
  sudo yum upgrade {Package}

repo_help:
  Run the following shell commands to add the repository and install from there.
  You either need 'yum upgrade' or 'yum install' depending on whether you already have
  an older version installed or not.

[DNF]
base: Generic
key_sh:
  sudo rpm --import {DownloadUrlHttpsCred}/{Platform}/repodata/repomd.xml.key
del_repo_sh:
  sudo rm -f /etc/yum.repos.d/{DelRepoFile}.repo
repo_sh:
  sudo dnf config-manager --add-repo {DownloadUrlCred}/{Platform}/{Project}.repo
  sudo dnf clean all
  sudo dnf install {Package}
  sudo dnf upgrade {Package}

repo_help:
  Run the following shell commands to add the repository and install from there.
  You either need 'dnf upgrade' or 'dnf install' depending on whether you already have
  an older version installed or not.

[ZYP]
base: Generic
key_sh:
  sudo rpm --import {DownloadUrlHttpsCred}/{Platform}/repodata/repomd.xml.key
del_repo_sh:
  sudo rm -f /etc/zypp/repos.d/{DelRepoFile}.repo
repo_sh:
  sudo zypper addrepo {DownloadUrlCred}/{Platform}/{Project}.repo
  sudo zypper refresh
  sudo zypper install {Package}

# Linux_Mint is called only Linux
[Linux]
base: APT

[Ubuntu]
base: APT

[xUbuntu]
base: APT

[Debian]
base: APT

[Univention]
base: APT

[CentOS_6]
base: YUM

[CentOS]
base: DNF

[CentOS_6_PHP54]
base: CentOS_6
repo_sh:
  sudo yum install -y --nogpgcheck centos-release-SCL
  sudo wget {DownloadUrlCred}/{Platform}/{Project}.repo -O /etc/yum.repos.d/{Project}.repo
  sudo yum clean all
  sudo yum install {Package}
  sudo yum upgrade {Package}

[CentOS_6_PHP55]
base: CentOS_6
repo_sh:
  sudo yum install -y https://www.softwarecollections.org/en/scls/rhscl/php55/epel-6-x86_64/download/rhscl-php55-epel-6-x86_64.noarch.rpm
  sudo yum install -y https://www.softwarecollections.org/en/scls/rhscl/httpd24/epel-6-x86_64/download/rhscl-httpd24-epel-6-x86_64.noarch.rpm
  sudo wget {DownloadUrlCred}/{Platform}/{Project}.repo -O /etc/yum.repos.d/{Project}.repo
  sudo yum clean all
  sudo yum install {Package}
  sudo yum upgrade {Package}

[CentOS_6_PHP56]
base: CentOS_6
repo_sh:
  sudo yum install -y https://www.softwarecollections.org/en/scls/rhscl/rh-php56/epel-6-x86_64/download/rhscl-rh-php56-epel-6-x86_64.noarch.rpm
  sudo yum install -y https://www.softwarecollections.org/en/scls/rhscl/httpd24/epel-6-x86_64/download/rhscl-httpd24-epel-6-x86_64.noarch.rpm
  sudo wget {DownloadUrlCred}/{Platform}/{Project}.repo -O /etc/yum.repos.d/{Project}.repo
  sudo yum clean all
  sudo yum install {Package}
  sudo yum upgrade {Package}

[Fedora]
base: DNF

[RHEL_6]
base: YUM

[RHEL]
base: DNF

[openSUSE]
base: ZYP

[SLE]
base: ZYP

